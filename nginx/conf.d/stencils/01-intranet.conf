# Configuration file for the production server of Omniport

# The upstream Gunicorn component NGINX needs to connect to
upstream intranet-gunicorn {
    # Here intranet-server automatically refers to the Intranet site container
    server intranet-server:8000; # Web port socket
}

# The upstream Daphne component NGINX needs to connect to
upstream intranet-daphne {
    # Here intranet-server automatically refers to the Intranet site container
    server intranet-server:8001; # Web port socket
}

# Configuration for rate limiting and throttling
limit_req_zone $binary_remote_addr zone=intranet_limit:16m rate=16r/s;

# Configuration of the HTTP server
server {
    # The port the site will be served on
    listen      80;
    listen      [::]:80;

    # The domain name it will serve for
    server_name [[intranet_domain]];

    # Use the UTF-8 charset
    charset     utf-8;

    # Max upload size
    # Adjust to taste
    client_max_body_size    63M;

    # Include support for MIME types
    include         mime.types;
    default_type    application/octet-stream;

    # Compression
    # Uses GNU Gzip
    include conf.d/includes/compression.conf;

    # Logging
    # Logs both access and errors
    include conf.d/includes/logging.conf;

    # All the location blocks for assets
    # Consists of static/ media/ personal/ and branding/
    include conf.d/includes/assets.conf;

    # Security
    # Adds security-minded headers to the response
    include conf.d/includes/security.conf;

    # Websocket URLs
    location /ws {
        # Throttling for web socket URLs
        limit_req zone=intranet_limit burst=24 nodelay;

        # Reverse proxy the request to the upstream Daphne server
        proxy_pass          http://intranet-daphne;

        # These headers upgrade HTTP to WS
        proxy_http_version  1.1;
        proxy_set_header    Upgrade         $http_upgrade;
        proxy_set_header    Connection      "Upgrade";

        # Set additional headers in communicating with the application server
        include conf.d/includes/app_server.conf;
    }

    # If neither of the above matches, forward the request to Gunicorn
    location ~ /(kernel|base_auth|token_auth|session_auth|open_auth|bootstrap|omnipotence|api) {
        # Throttling for other URLs
        limit_req zone=intranet_limit burst=24 nodelay;

        # Reverse proxy the request to the upstream Gunicorn server
        proxy_pass          http://intranet-gunicorn;

        # Set additional headers in communicating with the application server
        include conf.d/includes/app_server.conf;
    }

    # The location block for that serves the frontend on /
    include conf.d/includes/frontend.conf;
}
